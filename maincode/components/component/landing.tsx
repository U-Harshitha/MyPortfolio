/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/3drdD2p7F06
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Gabarito } from 'next/font/google'

gabarito({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import Link from "next/link"

export function Landing() {
  const [isDarkMode, setIsDarkMode] = useState(false)
  return (
    <div
      className={`flex flex-col items-center justify-center min-h-dvh bg-background text-foreground transition-colors duration-300 ${
        isDarkMode ? "dark" : ""
      }`}
    >
      <div className="flex flex-col items-center justify-center space-y-4 px-4 md:px-6">
        <div className="rounded-full w-32 h-32 bg-muted text-6xl border-[6px] border-background flex items-center justify-center">
          ðŸŽ¯
        </div>
        <h1 className="text-3xl font-bold">John Doe</h1>
      </div>
      <div className="flex items-center justify-between w-full max-w-md px-4 md:px-6 py-4 mt-8">
        <div className="relative group">
          <Button
            variant="ghost"
            className="flex items-center gap-2 transition-colors duration-300 hover:bg-accent hover:text-accent-foreground"
          >
            <ChevronLeftIcon className="h-4 w-4 transition-transform duration-300 group-hover:-translate-x-1" />
            <span>About</span>
          </Button>
          <div className="absolute left-0 top-full mt-2 w-40 origin-top-left rounded-md bg-background p-2 shadow-lg group-hover:visible group-hover:opacity-100 invisible opacity-0 transition-all duration-300">
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Biography
            </Link>
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Skills
            </Link>
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Experience
            </Link>
          </div>
        </div>
        <div className="relative group">
          <Button
            variant="ghost"
            className="flex items-center gap-2 transition-colors duration-300 hover:bg-accent hover:text-accent-foreground"
          >
            <span>Projects</span>
            <ChevronRightIcon className="h-4 w-4 transition-transform duration-300 group-hover:translate-x-1" />
          </Button>
          <div className="absolute right-0 top-full mt-2 w-40 origin-top-right rounded-md bg-background p-2 shadow-lg group-hover:visible group-hover:opacity-100 invisible opacity-0 transition-all duration-300">
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Personal
            </Link>
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Professional
            </Link>
            <Link href="#" className="block px-4 py-2 text-sm hover:bg-muted rounded-md" prefetch={false}>
              Open Source
            </Link>
          </div>
        </div>
      </div>
      <div className="absolute top-4 right-4">
        <Button variant="ghost" size="icon" onClick={() => setIsDarkMode(!isDarkMode)} className="rounded-full">
          {isDarkMode ? <SunIcon className="h-6 w-6" /> : <MoonIcon className="h-6 w-6" />}
          <span className="sr-only">Toggle theme</span>
        </Button>
      </div>
    </div>
  )
}

function ChevronLeftIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m15 18-6-6 6-6" />
    </svg>
  )
}


function ChevronRightIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m9 18 6-6-6-6" />
    </svg>
  )
}


function MoonIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" />
    </svg>
  )
}


function SunIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="4" />
      <path d="M12 2v2" />
      <path d="M12 20v2" />
      <path d="m4.93 4.93 1.41 1.41" />
      <path d="m17.66 17.66 1.41 1.41" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="m6.34 17.66-1.41 1.41" />
      <path d="m19.07 4.93-1.41 1.41" />
    </svg>
  )
}


function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
